{"version":3,"sources":["components/QuoteBlock/quoteBlock.jsx","components/Signature/Signature.jsx","utils/colors.js","containers/App/App.js","utils/api_url.js","index.js"],"names":["quoteblock","props","value","react_default","a","createElement","className","quote","author","href","concat","target","rel","onClick","onQuoteChange","signature","title","colorList","app","_useState","useState","_useState2","Object","slicedToArray","quotesList","setQuotesList","_useState3","_useState4","setQuote","_useState5","_useState6","appColor","setAppColor","_useState7","status","message","_useState8","error","setError","generateRandomNumber","max","Math","floor","random","setRandomQuote","list","randomIndex","length","changeAppColor","useEffect","fetch","then","res","json","quotes","catch","err","quoteContainer","Fragment","quoteBlock","Signature_Signature","style","--app-background","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.9fb53276.chunk.js","sourcesContent":["import React from 'react';\n\nconst quoteblock = props => {\n  const { value } = props;\n\n  return (\n    <div className=\"quote__block\">\n      <h1 className=\"quote__text\">{value.quote}</h1>\n      <h3 className=\"quote__author\">- {value.author}</h3>\n      <div className=\"quote__controls\">\n        <a\n          className=\"quote__controls--button\"\n          href={`https://twitter.com/intent/tweet?text=${props.value.quote} - ${props.value.author}`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Tweet\n        </a>\n        <button\n          className=\"quote__controls--button\"\n          onClick={props.onQuoteChange}\n        >\n          New Quote\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default quoteblock;\n","import React from 'react';\nimport './Signature.css';\n\nconst signature = () => {\n    return (\n        <div className=\"signature__container\">\n            <p className=\"signature__text\">made by\n                <a className=\"signature__link\" href=\"https://github.com/manuhdez\" target=\"_blank\" rel=\"noopener noreferrer\"> manuhdez </a>\n                with\n            </p>\n            <a href=\"https://reactjs.org\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"signature__logo\" title=\"and hooks\">\n                    <i className=\"fab fa-react signature__logo--icon\"></i>\n            </a>\n        </div>\n    );\n};\n\nexport default signature;\n","const colorList = [\n    '336699',\n    '2f4858',\n    'e3170a',\n    '6d326d',\n    'ffba49',\n    'ef5b5b',\n    '221e22',\n    '31263e',\n    'eb5160'\n  ];\n  \n  export default colorList;\n  ","import React, { useState, useEffect } from 'react';\nimport QuoteBlock from '../../components/QuoteBlock/quoteBlock';\nimport Signature from '../../components/Signature/Signature';\nimport colorList from '../../utils/colors';\nimport apiUrl from '../../utils/api_url';\nimport './App.css';\n\nconst app = () => {\n  const [quotesList, setQuotesList] = useState([]);\n  const [quote, setQuote] = useState({});\n  const [appColor, setAppColor] = useState('fff');\n  const [error, setError] = useState({ status: false, message: '' });\n\n  const generateRandomNumber = max => {\n    return Math.floor(Math.random() * max);\n  };\n\n  const changeAppColor = list => {\n    let randomIndex = generateRandomNumber(list.length);\n    while (list[randomIndex] === appColor) {\n      randomIndex = generateRandomNumber(list.length);\n    }\n    setAppColor(list[randomIndex]);\n  };\n\n  const setRandomQuote = list => {\n    let randomIndex = generateRandomNumber(list.length);\n    while (list[randomIndex].quote === quote.quote) {\n      randomIndex = generateRandomNumber(list.length);\n    }\n    setQuote(quotesList[randomIndex]);\n    changeAppColor(colorList);\n  };\n\n  // reach to the api to grab a list of quotes from the server\n  useEffect(\n    () => {\n      // reset error state before reaching out\n      setError({ status: false, message: '' });\n      // check if quotes has been already fetched\n      if (quotesList.length === 0) {\n        fetch(apiUrl)\n          .then(res => res.json())\n          .then(res => setQuotesList(res.quotes))\n          .catch(err => useState({ error: true, message: err.message }));\n      } else {\n        setRandomQuote(quotesList);\n      }\n    },\n    [quotesList]\n  );\n\n  const quoteContainer = (\n    <React.Fragment>\n      <QuoteBlock\n        value={quote}\n        onQuoteChange={() => setRandomQuote(quotesList)}\n      />\n      <Signature />\n    </React.Fragment>\n  );\n\n  return (\n    <div className=\"App\" style={{ '--app-background': `#${appColor}` }}>\n      {\n        error.status\n        ? <h1>{error.message}</h1>\n        : quote !== {} ? quoteContainer : null\n      }\n    </div>\n  );\n};\n\nexport default app;\n","const api_url = 'https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json';\n\nexport default api_url;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './containers/App/App';\n\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}